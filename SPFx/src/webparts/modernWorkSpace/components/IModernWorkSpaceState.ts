import * as MicrosoftGraph from '@microsoft/microsoft-graph-types';
import { GraphMail } from './interfaces/IGraphMail';
import { GraphMyTeam, GraphTeamMessage } from './interfaces/IGraphMyTeam';
import { IGraphUserProfile, GraphUserProfile, ISPUsers } from './interfaces/IGraphUserProfile';
import { IGraphDriveFile, IGraphDriveFileItems, GraphDriveFile } from './interfaces/IGraphDriveFile';
import { ISPEvent, ISPEventItems, SPEvent, myOutlookEvent } from './interfaces/ISPEvent';
import { SPSite } from './interfaces/ISPSite';
import { SPFaq } from './interfaces/ISPFaq';
import { SPLineExtn } from './interfaces/ISPLineExtn';
import { ISPSearchResult, LobLink } from './interfaces/ISPSearchResult';
import { SPAnnouncement } from './interfaces/ISPAnnouncement';
import { LeaveRequest, LoanRequest, PettyCash, SalaryAdv, completedProcess, aggProcess } from './interfaces/IProcessStage';
import { EngageProgress } from './interfaces/IEngageProgress';
import { TimeSheet } from './interfaces/ITimeSheet';
import { PSearchResult } from './model/ISearchResult';
import { LineGraphInData, Activity, GroupedActivity, AggregatedActivity, LineGraphData, PieGraphData, PieData,CollaborationActivity} from "./interfaces/Objects";
import { SPEvents } from './interfaces/ISPEventBirthday';
//import { ICarouselImage } from './interfaces/IGraphDriveFile';  
import { DynamicsOpp } from './interfaces/IDynamicsOpportunities';


 
export interface IModernWorkSpaceState {
  DynamicOpportunities: DynamicsOpp[];
  isConnected: Boolean;
  isOnTeams?: Boolean;
  myTeams: MicrosoftGraph.Group[];
  notificationCount: number;
  allUser: GraphUserProfile[];
  myRecentUsers: GraphUserProfile[];
  myProfile: IGraphUserProfile;
  mailMessageArr: GraphMail[];
  mailMessageCount: number;
  myTeamGroupsArr: GraphMyTeam[];
  selectedTeam: string;
  selectedTeamMessages: GraphTeamMessage[];
  myRecentDriveFiles: GraphDriveFile[];
  docsSharedWithMe: GraphDriveFile[];
  companyEvents: SPEvent[];
  myCalendar: myOutlookEvent[];
  staffBirthdays: SPEvents[];
  staffAnniversary: SPEvents[];
  mySPSites: SPSite[];
  spUsers: ISPUsers[];
  spAnnouncements: SPAnnouncement[];
  spFAQ: SPFaq[];
  lineExtn: SPLineExtn[];
  searchExtn: string;
  myPlannerTasks: MicrosoftGraph.PlannerTask[];
  newTaskPercent?: number;
  employeeCount: Array<{Department: string; Count: number}>;
  LOBLinkList: LobLink[];
  searchstatus: boolean;  
  searchText: string;  
  item: ISPSearchResult[];
  isCalloutVisible: Boolean;
  myLeaveRequest: LeaveRequest[];
  loanRequests?: LoanRequest[];
  pettyCashApp?: PettyCash[];
  salaryAdvApp?: SalaryAdv[];
  allProcessStages: any[];
  completedProcesses?: completedProcess[];
  aggregratedProcesses?: aggProcess[];
  searchProcessStage: string;
  allEngagements: EngageProgress[];
  searchEngage: string;
  allTimeSheet: TimeSheet[];
  searchTimeSheet: string;
  value: string;
  PsearchText: string;
  PisCalloutVisible: boolean;
  Psearchstatus: boolean;
  PsearchResult: PSearchResult[];
  resultToDisplay: PSearchResult[];
  productChecked?: string[];
  customerChecked?: string[];
  sectorChecked?: string[];
  industryChecked?: string[];
  GroupActivityList: GroupedActivity;
  AggregatedActivityList: AggregatedActivity[];
  CollaborationActivityList: CollaborationActivity;
  barChartData: {}[];
  pieChartData: PieGraphData[];
  imageURLs: string[];
  searchOpportunities:string;
  //carouselItems: ICarouselImage[];
  // carouselItemElements: JSX.Element[];
  // currentCarouselItemElement: JSX.Element;
  // currentCarouselItemIndex: number;
  // carouselCanMoveNext: boolean;
  // carouselCanMovePrev: boolean;
}